import { FC } from "react";

import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";

import i18nConfig from "@/app/i18Config";
import initTranslations from "@/app/i18n";

import { getCommons } from "@/apis/common";

import Footer from "@/components/common/Footer";
import Navbar from "@/components/common/Navbar";
import TranslationProvider from "@/components/common/TraslationProvider";

import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export const generateStaticParams = () => {
  return i18nConfig.locales.map((locale) => ({ locale }));
};

type IBaseRootLayoutProps = Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>;

const i18nNamespaces = ["common"];

const RootLayout: FC<IBaseRootLayoutProps> = async (props) => {
  const { children, params } = props;

  const { locale } = await params;

  const { data } = await getCommons();

  const { resources } = await initTranslations(locale, i18nNamespaces);

  return (
    <html lang={locale}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <TranslationProvider
          locale={locale}
          namespaces={i18nNamespaces}
          resources={resources}
        >
          <Navbar {...data.blocks[0]} />
          {children}
          <Footer {...data.blocks[1]} />
        </TranslationProvider>
      </body>
    </html>
  );
};

export default RootLayout;
